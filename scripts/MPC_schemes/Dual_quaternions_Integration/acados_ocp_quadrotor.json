{
    "acados_include_path": "/home/fer/acados/include",
    "acados_lib_path": "/home/fer/acados/lib",
    "code_export_directory": "/home/fer/dual_ws/src/dual_quaternion/scripts/MPC_schemes/Dual_quaternions_Integration/c_generated_code",
    "constraints": {
        "C": [],
        "C_e": [],
        "D": [],
        "constr_type": "BGH",
        "constr_type_e": "BGH",
        "idxbu": [
            0,
            1,
            2,
            3,
            4,
            5
        ],
        "idxbx": [],
        "idxbx_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
        ],
        "idxbx_e": [],
        "idxbxe_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
        ],
        "idxsbu": [],
        "idxsbx": [],
        "idxsbx_e": [],
        "idxsg": [],
        "idxsg_e": [],
        "idxsh": [
            0
        ],
        "idxsh_e": [],
        "idxsphi": [],
        "idxsphi_e": [],
        "lbu": [
            -7,
            -7,
            -7,
            -5,
            -5,
            -5
        ],
        "lbx": [],
        "lbx_0": [
            0.0,
            0.0,
            0.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "lbx_e": [],
        "lg": [],
        "lg_e": [],
        "lh": [
            1.0
        ],
        "lh_e": [],
        "lphi": [],
        "lphi_e": [],
        "lsbu": [],
        "lsbx": [],
        "lsbx_e": [],
        "lsg": [],
        "lsg_e": [],
        "lsh": [
            0.0
        ],
        "lsh_e": [],
        "lsphi": [],
        "lsphi_e": [],
        "ubu": [
            7,
            7,
            7,
            5,
            5,
            5
        ],
        "ubx": [],
        "ubx_0": [
            0.0,
            0.0,
            0.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "ubx_e": [],
        "ug": [],
        "ug_e": [],
        "uh": [
            1.0
        ],
        "uh_e": [],
        "uphi": [],
        "uphi_e": [],
        "usbu": [],
        "usbx": [],
        "usbx_e": [],
        "usg": [],
        "usg_e": [],
        "ush": [
            0.0
        ],
        "ush_e": [],
        "usphi": [],
        "usphi_e": []
    },
    "cost": {
        "Vu": [],
        "Vu_0": [],
        "Vx": [],
        "Vx_0": [],
        "Vx_e": [],
        "Vz": [],
        "Vz_0": [],
        "W": [],
        "W_0": [],
        "W_e": [],
        "Zl": [
            100.0
        ],
        "Zl_e": [],
        "Zu": [
            100.0
        ],
        "Zu_e": [],
        "cost_ext_fun_type": "casadi",
        "cost_ext_fun_type_0": "casadi",
        "cost_ext_fun_type_e": "casadi",
        "cost_type": "EXTERNAL",
        "cost_type_0": "EXTERNAL",
        "cost_type_e": "EXTERNAL",
        "yref": [],
        "yref_0": [],
        "yref_e": [],
        "zl": [
            100.0
        ],
        "zl_e": [],
        "zu": [
            100.0
        ],
        "zu_e": []
    },
    "cython_include_dirs": [
        "/home/fer/miniconda3/envs/py3-learning/lib/python3.8/site-packages/numpy/core/include",
        "/home/fer/miniconda3/envs/py3-learning/include/python3.8"
    ],
    "dims": {
        "N": 51,
        "nbu": 6,
        "nbx": 0,
        "nbx_0": 7,
        "nbx_e": 0,
        "nbxe_0": 7,
        "ng": 0,
        "ng_e": 0,
        "nh": 1,
        "nh_e": 0,
        "np": 13,
        "nphi": 0,
        "nphi_e": 0,
        "nr": 0,
        "nr_e": 0,
        "ns": 1,
        "ns_e": 0,
        "nsbu": 0,
        "nsbx": 0,
        "nsbx_e": 0,
        "nsg": 0,
        "nsg_e": 0,
        "nsh": 1,
        "nsh_e": 0,
        "nsphi": 0,
        "nsphi_e": 0,
        "nu": 6,
        "nx": 7,
        "ny": 0,
        "ny_0": 0,
        "ny_e": 0,
        "nz": 0
    },
    "json_file": "acados_ocp_quadrotor.json",
    "model": {
        "con_h_expr": "||vertcat(x, y, z, qw, q1, q2, q3)[3:7]||_F",
        "con_h_expr_e": null,
        "con_phi_expr": null,
        "con_phi_expr_e": null,
        "con_r_expr": null,
        "con_r_expr_e": null,
        "con_r_in_phi": null,
        "con_r_in_phi_e": null,
        "cost_conl_custom_outer_hess": null,
        "cost_conl_custom_outer_hess_0": null,
        "cost_conl_custom_outer_hess_e": null,
        "cost_expr_ext_cost": "@1=(p[:3]-vertcat(x, y, z, qw, q1, q2, q3)[:3]), @2=vertcat(wx_1d, wy_1d, wz_1d, vx_1d, vy_1d, vz_1d), @3=((((p[3]*qw)+(p[4]*q1))+(p[5]*q2))+(p[6]*q3)), @4=((((p[3]*q1)-(p[4]*qw))+(p[6]*q2))-(p[5]*q3)), @5=((((-(p[5]*qw))-(p[6]*q1))+(p[3]*q2))+(p[4]*q3)), @6=((((p[5]*q1)-(p[6]*qw))-(p[4]*q2))+(p[3]*q3)), @7=(vertcat(((@3*@4)-(@5*@6)), ((@3*@5)+(@4*@6)), @6)/sqrt((0.001+(sq(@3)+sq(@6))))), ((mac(mac(@1',(((zeros(3x3)[0] = 10.5)[4] = 10.5)[8] = 10.5),zeros(1x3)),@1,0)+mac(mac(@2',((((((zeros(6x6)[0] = 0.142857)[7] = 0.142857)[14] = 0.142857)[21] = 0.2)[28] = 0.2)[35] = 0.2),zeros(1x6)),@2,0))+mac(mac(@7',(((zeros(3x3)[0] = 60.5)[4] = 60.5)[8] = 60.5),zeros(1x3)),@7,0))",
        "cost_expr_ext_cost_0": "@1=(p[:3]-vertcat(x, y, z, qw, q1, q2, q3)[:3]), @2=vertcat(wx_1d, wy_1d, wz_1d, vx_1d, vy_1d, vz_1d), @3=((((p[3]*qw)+(p[4]*q1))+(p[5]*q2))+(p[6]*q3)), @4=((((p[3]*q1)-(p[4]*qw))+(p[6]*q2))-(p[5]*q3)), @5=((((-(p[5]*qw))-(p[6]*q1))+(p[3]*q2))+(p[4]*q3)), @6=((((p[5]*q1)-(p[6]*qw))-(p[4]*q2))+(p[3]*q3)), @7=(vertcat(((@3*@4)-(@5*@6)), ((@3*@5)+(@4*@6)), @6)/sqrt((0.001+(sq(@3)+sq(@6))))), ((mac(mac(@1',(((zeros(3x3)[0] = 10.5)[4] = 10.5)[8] = 10.5),zeros(1x3)),@1,0)+mac(mac(@2',((((((zeros(6x6)[0] = 0.142857)[7] = 0.142857)[14] = 0.142857)[21] = 0.2)[28] = 0.2)[35] = 0.2),zeros(1x6)),@2,0))+mac(mac(@7',(((zeros(3x3)[0] = 60.5)[4] = 60.5)[8] = 60.5),zeros(1x3)),@7,0))",
        "cost_expr_ext_cost_custom_hess": null,
        "cost_expr_ext_cost_custom_hess_0": null,
        "cost_expr_ext_cost_custom_hess_e": null,
        "cost_expr_ext_cost_e": "@1=(p[:3]-vertcat(x, y, z, qw, q1, q2, q3)[:3]), @2=((((p[3]*qw)+(p[4]*q1))+(p[5]*q2))+(p[6]*q3)), @3=((((p[3]*q1)-(p[4]*qw))+(p[6]*q2))-(p[5]*q3)), @4=((((-(p[5]*qw))-(p[6]*q1))+(p[3]*q2))+(p[4]*q3)), @5=((((p[5]*q1)-(p[6]*qw))-(p[4]*q2))+(p[3]*q3)), @6=(vertcat(((@2*@3)-(@4*@5)), ((@2*@4)+(@3*@5)), @5)/sqrt((0.001+(sq(@2)+sq(@5))))), (mac(mac(@1',(((zeros(3x3)[0] = 10.5)[4] = 10.5)[8] = 10.5),zeros(1x3)),@1,0)+mac(mac(@6',(((zeros(3x3)[0] = 60.5)[4] = 60.5)[8] = 60.5),zeros(1x3)),@6,0))",
        "cost_psi_expr": null,
        "cost_psi_expr_0": null,
        "cost_psi_expr_e": null,
        "cost_r_in_psi_expr": null,
        "cost_r_in_psi_expr_0": null,
        "cost_r_in_psi_expr_e": null,
        "cost_y_expr": null,
        "cost_y_expr_0": null,
        "cost_y_expr_e": null,
        "disc_dyn_expr": null,
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "f_expl_expr": "vertcat(vertcat(wx_1d, wy_1d, wz_1d, vx_1d, vy_1d, vz_1d)[3:6], ((0.5*mac(horzcat(horzcat(qw, (-q1), (-q2), (-q3))', horzcat(q1, qw, (-q3), q2)', horzcat(q2, q3, qw, (-q1))', horzcat(q3, (-q2), q1, qw)')',vertcat(0, wx_1d, wy_1d, wz_1d),zeros(4x1)))+((10*(1-(((sq(qw)+sq(q1))+sq(q2))+sq(q3))))*vertcat(x, y, z, qw, q1, q2, q3)[3:7])))",
        "f_impl_expr": "(vertcat(x_dot, y_dot, z_dot, qw_dot, q1_dot, q2_dot, q3_dot)-vertcat(vertcat(wx_1d, wy_1d, wz_1d, vx_1d, vy_1d, vz_1d)[3:6], ((0.5*mac(horzcat(horzcat(qw, (-q1), (-q2), (-q3))', horzcat(q1, qw, (-q3), q2)', horzcat(q2, q3, qw, (-q1))', horzcat(q3, (-q2), q1, qw)')',vertcat(0, wx_1d, wy_1d, wz_1d),zeros(4x1)))+((10*(1-(((sq(qw)+sq(q1))+sq(q2))+sq(q3))))*vertcat(x, y, z, qw, q1, q2, q3)[3:7]))))",
        "gnsf": {
            "nontrivial_f_LO": 1,
            "purely_linear": 0
        },
        "name": "quadrotor",
        "p": "p",
        "u": "vertcat(wx_1d, wy_1d, wz_1d, vx_1d, vy_1d, vz_1d)",
        "x": "vertcat(x, y, z, qw, q1, q2, q3)",
        "xdot": "vertcat(x_dot, y_dot, z_dot, qw_dot, q1_dot, q2_dot, q3_dot)",
        "z": "0x0"
    },
    "p": "p",
    "parameter_values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "problem_class": "OCP",
    "shared_lib_ext": ".so",
    "solver_options": {
        "Tsim": 0.00980392156862745,
        "alpha_min": 0.05,
        "alpha_reduction": 0.7,
        "collocation_type": "GAUSS_LEGENDRE",
        "custom_update_filename": "",
        "custom_update_header_filename": "",
        "eps_sufficient_descent": 0.0001,
        "exact_hess_constr": 1,
        "exact_hess_cost": 1,
        "exact_hess_dyn": 1,
        "ext_cost_num_hess": 0,
        "ext_fun_compile_flags": "-O2",
        "full_step_dual": 0,
        "globalization": "FIXED_STEP",
        "globalization_use_SOC": 0,
        "hessian_approx": "GAUSS_NEWTON",
        "hpipm_mode": "BALANCE",
        "initialize_t_slacks": 0,
        "integrator_type": "IRK",
        "levenberg_marquardt": 0.0,
        "line_search_use_sufficient_descent": 0,
        "model_external_shared_lib_dir": null,
        "model_external_shared_lib_name": null,
        "nlp_solver_ext_qp_res": 0,
        "nlp_solver_max_iter": 100,
        "nlp_solver_step_length": 1.0,
        "nlp_solver_tol_comp": 1e-06,
        "nlp_solver_tol_eq": 1e-06,
        "nlp_solver_tol_ineq": 1e-06,
        "nlp_solver_tol_stat": 1e-06,
        "nlp_solver_type": "SQP",
        "print_level": 0,
        "qp_solver": "FULL_CONDENSING_HPIPM",
        "qp_solver_cond_N": 12,
        "qp_solver_cond_ric_alg": 1,
        "qp_solver_iter_max": 50,
        "qp_solver_ric_alg": 1,
        "qp_solver_tol_comp": null,
        "qp_solver_tol_eq": null,
        "qp_solver_tol_ineq": null,
        "qp_solver_tol_stat": null,
        "qp_solver_warm_start": 0,
        "regularize_method": "CONVEXIFY",
        "shooting_nodes": null,
        "sim_method_jac_reuse": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4
        ],
        "sim_method_num_steps": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "tf": 0.5,
        "time_steps": [
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745,
            0.00980392156862745
        ]
    }
}