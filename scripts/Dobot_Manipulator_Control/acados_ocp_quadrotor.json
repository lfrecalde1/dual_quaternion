{
    "acados_include_path": "/home/fer/acados/include",
    "acados_lib_path": "/home/fer/acados/lib",
    "code_export_directory": "/home/fer/dual_ws/src/dual_quaternion/scripts/Dobot_Manipulator_Control/c_generated_code",
    "constraints": {
        "C": [],
        "C_e": [],
        "D": [],
        "constr_type": "BGH",
        "constr_type_e": "BGH",
        "idxbu": [
            0,
            1,
            2,
            3,
            4,
            5
        ],
        "idxbx": [],
        "idxbx_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13
        ],
        "idxbx_e": [],
        "idxbxe_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13
        ],
        "idxsbu": [],
        "idxsbx": [],
        "idxsbx_e": [],
        "idxsg": [],
        "idxsg_e": [],
        "idxsh": [
            0,
            1
        ],
        "idxsh_e": [],
        "idxsphi": [],
        "idxsphi_e": [],
        "lbu": [
            -10,
            -10,
            -10,
            -10,
            -10,
            -10
        ],
        "lbx": [],
        "lbx_0": [
            -0.9911143699059244,
            -0.10946652920081934,
            0.024908864957295617,
            -0.07133675908848255,
            0.02859247873837399,
            -0.10151900836780355,
            -0.07015173743545808,
            -0.26596222552900306,
            1.1759067855184284,
            0.5906294748486604,
            -1.8599144979164592,
            -0.0829065923113863,
            -1.5170859186669403,
            -2.6088938666759
        ],
        "lbx_e": [],
        "lg": [],
        "lg_e": [],
        "lh": [
            1.0,
            0.0
        ],
        "lh_e": [],
        "lphi": [],
        "lphi_e": [],
        "lsbu": [],
        "lsbx": [],
        "lsbx_e": [],
        "lsg": [],
        "lsg_e": [],
        "lsh": [
            0.0,
            0.0
        ],
        "lsh_e": [],
        "lsphi": [],
        "lsphi_e": [],
        "ubu": [
            10,
            10,
            10,
            10,
            10,
            10
        ],
        "ubx": [],
        "ubx_0": [
            -0.9911143699059244,
            -0.10946652920081934,
            0.024908864957295617,
            -0.07133675908848255,
            0.02859247873837399,
            -0.10151900836780355,
            -0.07015173743545808,
            -0.26596222552900306,
            1.1759067855184284,
            0.5906294748486604,
            -1.8599144979164592,
            -0.0829065923113863,
            -1.5170859186669403,
            -2.6088938666759
        ],
        "ubx_e": [],
        "ug": [],
        "ug_e": [],
        "uh": [
            1.0,
            0.0
        ],
        "uh_e": [],
        "uphi": [],
        "uphi_e": [],
        "usbu": [],
        "usbx": [],
        "usbx_e": [],
        "usg": [],
        "usg_e": [],
        "ush": [
            0.0,
            0.0
        ],
        "ush_e": [],
        "usphi": [],
        "usphi_e": []
    },
    "cost": {
        "Vu": [],
        "Vu_0": [],
        "Vx": [],
        "Vx_0": [],
        "Vx_e": [],
        "Vz": [],
        "Vz_0": [],
        "W": [],
        "W_0": [],
        "W_e": [],
        "Zl": [
            100.0,
            100.0
        ],
        "Zl_e": [],
        "Zu": [
            100.0,
            100.0
        ],
        "Zu_e": [],
        "cost_ext_fun_type": "casadi",
        "cost_ext_fun_type_0": "casadi",
        "cost_ext_fun_type_e": "casadi",
        "cost_type": "EXTERNAL",
        "cost_type_0": "EXTERNAL",
        "cost_type_e": "EXTERNAL",
        "yref": [],
        "yref_0": [],
        "yref_e": [],
        "zl": [
            100.0,
            100.0
        ],
        "zl_e": [],
        "zu": [
            100.0,
            100.0
        ],
        "zu_e": []
    },
    "cython_include_dirs": [
        "/home/fer/miniconda3/envs/py3-learning/lib/python3.8/site-packages/numpy/core/include",
        "/home/fer/miniconda3/envs/py3-learning/include/python3.8"
    ],
    "dims": {
        "N": 11,
        "nbu": 6,
        "nbx": 0,
        "nbx_0": 14,
        "nbx_e": 0,
        "nbxe_0": 14,
        "ng": 0,
        "ng_e": 0,
        "nh": 2,
        "nh_e": 0,
        "np": 14,
        "nphi": 0,
        "nphi_e": 0,
        "nr": 0,
        "nr_e": 0,
        "ns": 2,
        "ns_e": 0,
        "nsbu": 0,
        "nsbx": 0,
        "nsbx_e": 0,
        "nsg": 0,
        "nsg_e": 0,
        "nsh": 2,
        "nsh_e": 0,
        "nsphi": 0,
        "nsphi_e": 0,
        "nu": 6,
        "nx": 14,
        "ny": 0,
        "ny_0": 0,
        "ny_e": 0,
        "nz": 0
    },
    "json_file": "acados_ocp_quadrotor.json",
    "model": {
        "con_h_expr": "@1=vertcat(qw_1d, qx_1d, qy_1d, qz_1d, dw_1d, dx_1d, dy_1d, dz_1d, theta_1, theta_2, theta_3, theta_4, theta_5, theta_6), vertcat(||f_quat(@1[:8]){0}||_F, (2.*dot(@1[:4], @1[4:8])))",
        "con_h_expr_e": null,
        "con_phi_expr": null,
        "con_phi_expr_e": null,
        "con_r_expr": null,
        "con_r_expr_e": null,
        "con_r_in_phi": null,
        "con_r_in_phi_e": null,
        "cost_conl_custom_outer_hess": null,
        "cost_conl_custom_outer_hess_0": null,
        "cost_conl_custom_outer_hess_e": null,
        "cost_expr_ext_cost": "@1=p[1], @2=p[2], @3=p[3], @4=(-@1), @5=(-@2), @6=(-@3), @7=horzcat(horzcat(p[0], @1, @2, @3)', horzcat(@4, p[0], @3, @5)', horzcat(@5, @6, p[0], @1)', horzcat(@6, @2, @4, p[0])')', @8=p[5], @9=p[6], @10=p[7], @11=(-@8), @12=(-@9), @13=(-@10), @14=mac(horzcat(horzcat(@7, zeros(4x4))', horzcat(horzcat(horzcat(p[4], @8, @9, @10)', horzcat(@11, p[4], @10, @12)', horzcat(@12, @13, p[4], @8)', horzcat(@13, @9, @11, p[4])')', @7)')',vertcat(qw_1d, qx_1d, qy_1d, qz_1d, dw_1d, dx_1d, dy_1d, dz_1d, theta_1, theta_2, theta_3, theta_4, theta_5, theta_6)[:8],zeros(8x1)), @15=||(all_2.22045e-16(3x1)+@14[1:4])||_F, @16=(2.*atan2(@15,@14[0])), @17=mac((2.*horzcat(horzcat(@14[4], (-@14[5]), (-@14[6]), (-@14[7]))', horzcat(@14[5], @14[4], (-@14[7]), @14[6])', horzcat(@14[6], @14[7], @14[4], (-@14[5]))', horzcat(@14[7], (-@14[6]), @14[5], @14[4])')'),vertcat(@14[0], (-@14[1]), (-@14[2]), (-@14[3])),zeros(4x1)), @18=vertcat((((0.5*@16)*@14[1])/@15), (((0.5*@16)*@14[2])/@15), (((0.5*@16)*@14[3])/@15), (0.5*@17[1]), (0.5*@17[2]), (0.5*@17[3])), @19=(p[8:14]-vertcat(theta_1_c, theta_2_c, theta_3_c, theta_4_c, theta_5_c, theta_6_c)), ((10*mac(mac(@18',((((((zeros(6x6)[0] = 0.1)[7] = 0.1)[14] = 0.1)[21] = 2)[28] = 2)[35] = 2),zeros(1x6)),@18,0))+(0.05*mac(mac(@19',((((((zeros(6x6)[0] = 2)[7] = 2)[14] = 2)[21] = 2)[28] = 2)[35] = 2),zeros(1x6)),@19,0)))",
        "cost_expr_ext_cost_0": "@1=p[1], @2=p[2], @3=p[3], @4=(-@1), @5=(-@2), @6=(-@3), @7=horzcat(horzcat(p[0], @1, @2, @3)', horzcat(@4, p[0], @3, @5)', horzcat(@5, @6, p[0], @1)', horzcat(@6, @2, @4, p[0])')', @8=p[5], @9=p[6], @10=p[7], @11=(-@8), @12=(-@9), @13=(-@10), @14=mac(horzcat(horzcat(@7, zeros(4x4))', horzcat(horzcat(horzcat(p[4], @8, @9, @10)', horzcat(@11, p[4], @10, @12)', horzcat(@12, @13, p[4], @8)', horzcat(@13, @9, @11, p[4])')', @7)')',vertcat(qw_1d, qx_1d, qy_1d, qz_1d, dw_1d, dx_1d, dy_1d, dz_1d, theta_1, theta_2, theta_3, theta_4, theta_5, theta_6)[:8],zeros(8x1)), @15=||(all_2.22045e-16(3x1)+@14[1:4])||_F, @16=(2.*atan2(@15,@14[0])), @17=mac((2.*horzcat(horzcat(@14[4], (-@14[5]), (-@14[6]), (-@14[7]))', horzcat(@14[5], @14[4], (-@14[7]), @14[6])', horzcat(@14[6], @14[7], @14[4], (-@14[5]))', horzcat(@14[7], (-@14[6]), @14[5], @14[4])')'),vertcat(@14[0], (-@14[1]), (-@14[2]), (-@14[3])),zeros(4x1)), @18=vertcat((((0.5*@16)*@14[1])/@15), (((0.5*@16)*@14[2])/@15), (((0.5*@16)*@14[3])/@15), (0.5*@17[1]), (0.5*@17[2]), (0.5*@17[3])), @19=(p[8:14]-vertcat(theta_1_c, theta_2_c, theta_3_c, theta_4_c, theta_5_c, theta_6_c)), ((10*mac(mac(@18',((((((zeros(6x6)[0] = 0.1)[7] = 0.1)[14] = 0.1)[21] = 2)[28] = 2)[35] = 2),zeros(1x6)),@18,0))+(0.05*mac(mac(@19',((((((zeros(6x6)[0] = 2)[7] = 2)[14] = 2)[21] = 2)[28] = 2)[35] = 2),zeros(1x6)),@19,0)))",
        "cost_expr_ext_cost_custom_hess": null,
        "cost_expr_ext_cost_custom_hess_0": null,
        "cost_expr_ext_cost_custom_hess_e": null,
        "cost_expr_ext_cost_e": "@1=p[1], @2=p[2], @3=p[3], @4=(-@1), @5=(-@2), @6=(-@3), @7=horzcat(horzcat(p[0], @1, @2, @3)', horzcat(@4, p[0], @3, @5)', horzcat(@5, @6, p[0], @1)', horzcat(@6, @2, @4, p[0])')', @8=p[5], @9=p[6], @10=p[7], @11=(-@8), @12=(-@9), @13=(-@10), @14=mac(horzcat(horzcat(@7, zeros(4x4))', horzcat(horzcat(horzcat(p[4], @8, @9, @10)', horzcat(@11, p[4], @10, @12)', horzcat(@12, @13, p[4], @8)', horzcat(@13, @9, @11, p[4])')', @7)')',vertcat(qw_1d, qx_1d, qy_1d, qz_1d, dw_1d, dx_1d, dy_1d, dz_1d, theta_1, theta_2, theta_3, theta_4, theta_5, theta_6)[:8],zeros(8x1)), @15=||(all_2.22045e-16(3x1)+@14[1:4])||_F, @16=(2.*atan2(@15,@14[0])), @17=mac((2.*horzcat(horzcat(@14[4], (-@14[5]), (-@14[6]), (-@14[7]))', horzcat(@14[5], @14[4], (-@14[7]), @14[6])', horzcat(@14[6], @14[7], @14[4], (-@14[5]))', horzcat(@14[7], (-@14[6]), @14[5], @14[4])')'),vertcat(@14[0], (-@14[1]), (-@14[2]), (-@14[3])),zeros(4x1)), @18=vertcat((((0.5*@16)*@14[1])/@15), (((0.5*@16)*@14[2])/@15), (((0.5*@16)*@14[3])/@15), (0.5*@17[1]), (0.5*@17[2]), (0.5*@17[3])), (10*mac(mac(@18',((((((zeros(6x6)[0] = 0.1)[7] = 0.1)[14] = 0.1)[21] = 2)[28] = 2)[35] = 2),zeros(1x6)),@18,0))",
        "cost_psi_expr": null,
        "cost_psi_expr_0": null,
        "cost_psi_expr_e": null,
        "cost_r_in_psi_expr": null,
        "cost_r_in_psi_expr_0": null,
        "cost_r_in_psi_expr_e": null,
        "cost_y_expr": null,
        "cost_y_expr_0": null,
        "cost_y_expr_e": null,
        "disc_dyn_expr": null,
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "f_expl_expr": "vertcat(mac(Function_J(vertcat(qw_1d, qx_1d, qy_1d, qz_1d, dw_1d, dx_1d, dy_1d, dz_1d, theta_1, theta_2, theta_3, theta_4, theta_5, theta_6)[8:14]){0},vertcat(theta_1_c, theta_2_c, theta_3_c, theta_4_c, theta_5_c, theta_6_c),zeros(8x1)), theta_1_c, theta_2_c, theta_3_c, theta_4_c, theta_5_c, theta_6_c)",
        "f_impl_expr": "(vertcat(qw_1dot, qx_1dot, qy_1dot, qz_1dot, dw_1dot, dx_1dot, dy_1dot, dz_1dot, theta_1_dot, theta_2_dot, theta_3_dot, theta_4_dot, theta_5_dot, theta_6_dot)-vertcat(mac(Function_J(vertcat(qw_1d, qx_1d, qy_1d, qz_1d, dw_1d, dx_1d, dy_1d, dz_1d, theta_1, theta_2, theta_3, theta_4, theta_5, theta_6)[8:14]){0},vertcat(theta_1_c, theta_2_c, theta_3_c, theta_4_c, theta_5_c, theta_6_c),zeros(8x1)), theta_1_c, theta_2_c, theta_3_c, theta_4_c, theta_5_c, theta_6_c))",
        "gnsf": {
            "nontrivial_f_LO": 1,
            "purely_linear": 0
        },
        "name": "quadrotor",
        "p": "p",
        "u": "vertcat(theta_1_c, theta_2_c, theta_3_c, theta_4_c, theta_5_c, theta_6_c)",
        "x": "vertcat(qw_1d, qx_1d, qy_1d, qz_1d, dw_1d, dx_1d, dy_1d, dz_1d, theta_1, theta_2, theta_3, theta_4, theta_5, theta_6)",
        "xdot": "vertcat(qw_1dot, qx_1dot, qy_1dot, qz_1dot, dw_1dot, dx_1dot, dy_1dot, dz_1dot, theta_1_dot, theta_2_dot, theta_3_dot, theta_4_dot, theta_5_dot, theta_6_dot)",
        "z": "0x0"
    },
    "p": "p",
    "parameter_values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "problem_class": "OCP",
    "shared_lib_ext": ".so",
    "solver_options": {
        "Tsim": 0.045454545454545456,
        "alpha_min": 0.05,
        "alpha_reduction": 0.7,
        "collocation_type": "GAUSS_LEGENDRE",
        "custom_update_filename": "",
        "custom_update_header_filename": "",
        "eps_sufficient_descent": 0.0001,
        "exact_hess_constr": 1,
        "exact_hess_cost": 1,
        "exact_hess_dyn": 1,
        "ext_cost_num_hess": 0,
        "ext_fun_compile_flags": "-O2",
        "full_step_dual": 0,
        "globalization": "FIXED_STEP",
        "globalization_use_SOC": 0,
        "hessian_approx": "GAUSS_NEWTON",
        "hpipm_mode": "BALANCE",
        "initialize_t_slacks": 0,
        "integrator_type": "IRK",
        "levenberg_marquardt": 0.0,
        "line_search_use_sufficient_descent": 0,
        "model_external_shared_lib_dir": null,
        "model_external_shared_lib_name": null,
        "nlp_solver_ext_qp_res": 0,
        "nlp_solver_max_iter": 100,
        "nlp_solver_step_length": 1.0,
        "nlp_solver_tol_comp": 1e-06,
        "nlp_solver_tol_eq": 1e-06,
        "nlp_solver_tol_ineq": 1e-06,
        "nlp_solver_tol_stat": 1e-06,
        "nlp_solver_type": "SQP_RTI",
        "print_level": 0,
        "qp_solver": "FULL_CONDENSING_HPIPM",
        "qp_solver_cond_N": 2,
        "qp_solver_cond_ric_alg": 1,
        "qp_solver_iter_max": 50,
        "qp_solver_ric_alg": 1,
        "qp_solver_tol_comp": null,
        "qp_solver_tol_eq": null,
        "qp_solver_tol_ineq": null,
        "qp_solver_tol_stat": null,
        "qp_solver_warm_start": 0,
        "regularize_method": "CONVEXIFY",
        "shooting_nodes": null,
        "sim_method_jac_reuse": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4
        ],
        "sim_method_num_steps": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "tf": 0.5,
        "time_steps": [
            0.045454545454545456,
            0.045454545454545456,
            0.045454545454545456,
            0.045454545454545456,
            0.045454545454545456,
            0.045454545454545456,
            0.045454545454545456,
            0.045454545454545456,
            0.045454545454545456,
            0.045454545454545456,
            0.045454545454545456
        ]
    }
}